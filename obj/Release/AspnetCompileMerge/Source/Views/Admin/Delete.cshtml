@model WebApplication1.Models.SignUpModel

@{
    ViewBag.Title = "Delete Account";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="margin-top: 30px; margin-bottom:20px">Delete Account</h2>

<h3 class="text-danger fal fa-exclamation-triangle"> Are you sure you want to delete this account?</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

<table class="table" style="margin-top: 50px; margin-bottom:50px">
    <thead class="thead-dark">
        <tr>
            <th>
                ID
            </th>
            <th>
                Name
            </th>
            <th>
                Email
            </th>
            <th>
                Password
            </th>
            <th>
                Role
            </th>
            <th>
                Active Status
            </th>
        </tr>
    </thead>
    <tr>
        <th>
            <div class="form-group">
                @*@Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">

                    @Html.DisplayFor(model => model.id)

                </div>
            </div>
        </th>
        <th>
            <div class="form-group">
                @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </th>
        <th>
            <div class="form-group">
                @*@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </th>
        <th>
            <div class="form-group">
                @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    <input type="password" name="Password" id="Password" value=@Model.Password required readonly />
                </div>
            </div>
        </th>
        <th>
            <div class="form-group">
                @*Role*@
                <div class="col-md-10">
                    <input type="text" readonly value="@Model.role" class="form-control" />
                </div>
            </div>
        </th>
        <th>
            <div class="form-group">
                @*@Html.LabelFor(model => model.enable, htmlAttributes: new { @class = "control-label col-md-2", @required = "required" })*@
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.enable)
                        @Html.ValidationMessageFor(model => model.enable, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </th>
    </tr>
</table>



        @*<div class="form-group">
            @Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DisplayFor(model => model.id)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="password" name="Password" id="Password" value=@Model.Password required readonly />
            </div>
        </div>

        <div class="form-group">
            Role
            <div class="col-md-10">
                <input type="text" readonly value="@Model.role" class="form-control" />
            </div>
        </div>*@
        <input type="hidden" value="@Model.role" name="oldRole" id="oldRole" />
        <input type="hidden" value="@Model.Email" name="oldEmail" id="oldEmail" />
        <input type="hidden" value="@Model.Password" name="oldPassword" id="oldPassword" />

        @*<div class="form-group">
            @Html.LabelFor(model => model.enable, htmlAttributes: new { @class = "control-label col-md-2", @required = "required" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.enable)
                    @Html.ValidationMessageFor(model => model.enable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@
        


<div class="form-group">
    <div class="col-md-offset-2 col-md-10" style="margin-bottom:10px">
        <input type="submit" value="Save" class="btn btn-primary btn-large" style=" border-radius: 10px" />
    </div>
    <div class="col-md-offset-2 col-md-10">
        @Html.ActionLink("< Back to List", "", null, new { @class = "btn btn-primary btn-large", @style = " border-radius: 10px" })
    </div>
</div>
        
</div>
}
@*</div>*@
